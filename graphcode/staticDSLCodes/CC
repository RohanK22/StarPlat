function Compute_CC ( Graph g,propNode <float> CC){
    g.attachNodeProperty (CC = 0);
    int numNodes = g.num_nodes();
    int source=0;
    propNode<int> dist;
    propNode<bool> modified;
    do{                     

        g.attachNodeProperty(dist = INF, modified = False);
        source.modified = True;
        source.dist = 0;
        bool finished = False;
        fixedPoint until(finished : !modified){
            forall(v in g.nodes()){
                forall(nbr in g.neighbors(v).filter(modified == True)){
                    edge e = g.get_edge(v, nbr);
                    <v.dist, v.modified> = <Min(v.dist, nbr.dist + e.weight), True>;
                }
            }
        }   
        float temp=0;
        forall (v in g.nodes().filter(dist != INF)) {
            temp += v.dist;
        }
        source.CC = 1/temp;
        source=source+1 ; 
    }while(source<numNodes);
}