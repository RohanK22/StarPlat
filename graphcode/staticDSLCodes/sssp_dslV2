function Compute_SSSP(Graph g, propNode<int> dist, node src)
{

     propNode<bool> modified1;
     g.attachNodeProperty(dist = INF, modified1 = False);
     src.modified1 = True;
     src.dist = 0;
     bool finished = False;
     fixedPoint until(finished : !modified1)
     {
          forall(v in g.nodes())
          {
               forall(nbr in g.neighbors(v).filter(modified1 == True))
               {
                    edge e = g.get_edge(v, nbr);
                    <v.dist,v.modified1> = <Min(v.dist, nbr.dist + e.weight), True>;
               }
          }
     }
}
